{% if kind == "Deployment" %}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ item.value.svc_name }}
spec:
  ports:
{%for key in item.value.ports%}
    - port: {{ item.value.ports[key]['port'] }}
      name: {{ key }}
      nodePort: {{ item.value.ports[key]['nodePort'] }}
{%endfor%}
  selector:
    unit: {{ item.key }}
  type : NodePort
{% endif %}

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ item.value.name }}
spec:
{% if kind == "Replicas" %}
  replicas: {{ item.value.replica }}
{% else %}
  replicas: 1
{% endif %}
  template:
    metadata:
      labels:
        unit: {{ item.key }}
    spec:
      containers:
        - resources:
            limits: 
              memory: {{ item.value.memory }}
              cpu: {{ item.value.cpu }}
          image: {{docker.registry }}/{{ docker.project }}/{{ item.value.image }}
          name: {{ item.value.name }}
          ports:
          - containerPort: {{ services.keystone.ports.public.port}}
          - containerPort: {{ services.keystone.ports.admin.port}}
          env:
            - name: MYSQL_HOST
              value: {{ services.mysql.svc_name }}.{{namespace }}.svc.{{ svc_dns_domain }} 
            - name: KEYSTONE_HOST
              value: {{ services.keystone.svc_name }}.{{namespace }}.svc.{{ svc_dns_domain }} 
            - name: MEMCACHED_HOST
              value: {{ services.memcached.svc_name }}.{{namespace }}.svc.{{ svc_dns_domain }} 
            - name: GLANCE_HOST
              value: {{ services.glance.svc_name }}.{{namespace }}.svc.{{ svc_dns_domain }} 
            - name: NEUTRON_HOST
              value: {{ services.neutron.svc_name }}.{{namespace }}.svc.{{ svc_dns_domain }}  
            - name: NOVA_HOST
              value: {{ services.nova.svc_name }}.{{namespace }}.svc.{{ svc_dns_domain }}  
            - name: RABBITMQ_HOST
              value: {{ services.rabbitmq.svc_name }}.{{namespace }}.svc.{{ svc_dns_domain }}  
            - name: ADMIN_USER
              value: {{ services.keystone.user }}
            - name: ADMIN_PASSWORD
              value: {{ services.keystone.passwd }}
            - name: ADMIN_TOKEN
              value: {{ item.value.admin_token }}
            - name: OS_TOKEN
              value: {{ item.value.admin_token }}
            - name: OS_URL
              value: http://{{ services.keystone.svc_name }}.{{namespace }}.svc.{{ svc_dns_domain }}:{{services.keystone.ports.admin.port }}/{{ services.keystone.path }}
            - name: OS_IDENTITY_API_VERSION
              value: "{{ services.keystone.api_version }}"
            - name: REGION
              value: {{ services.keystone.region }}
            - name: MYSQL_ROOT_PASSWORD
              value: {{ services.mysql.root_passwd }}
            - name: KEYSTONE_DB
              value: {{ services.keystone.db }}
            - name: KEYSTONE_DBUSER
              value: {{ services.keystone.db_user }}
            - name: KEYSTONE_DBPASS
              value: {{ services.keystone.db_pass }}
            - name: RABBITMQ_USER
              value: {{ services.rabbitmq.user }}
            - name: RABBITMQ_PASSWORD
              value: {{ services.rabbitmq.passwd }}
          command: [ "/bin/bash", "-c", "/bin/bash /opt/run/run.sh" ]
          volumeMounts:
           - mountPath: /opt/keystone
             name: keystone-conf
           - mountPath: /opt/run
             name: run
           - mountPath: /opt/conf
             name: apache
           - mountPath: /opt/openrc
             name: openrc
      volumes:
        - name: keystone-conf
          configMap:
            name: keystone.conf
            items:
             - key: keystone.conf
               path: keystone.conf
        - name: run
          configMap:
            name: run.sh
            items:
             - key: run.sh
               path: run.sh
        - name: apache
          configMap:
            name: apache2.conf
            items:
             - key: apache2.conf
               path: apache2.conf
        - name: openrc
          configMap:
            name: openrc
            items:
             - key: openrc
               path: openrc
